// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.Configuration;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace WinFormsApp1.Models
{
    public partial class NetContext : DbContext
    {
        string connectionString = "";

        public NetContext()
        {
            connectionString = ConfigurationManager.ConnectionStrings["proxyMySQL"].ToString();
        }

        public NetContext(DbContextOptions<NetContext> options)
            : base(options)
        {
        }

        public virtual DbSet<TAdmin> TAdmin { get; set; }
        public virtual DbSet<TBorrow> TBorrow { get; set; }
        public virtual DbSet<TObj> TObj { get; set; }
        public virtual DbSet<TUser> TUser { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder) => optionsBuilder.UseMySql(connectionString, ServerVersion.Parse("8.0.31-myssql"));

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.UseCollation("utf8mb4_0900_ai_ci")
                .HasCharSet("utf8mb4");

            modelBuilder.Entity<TAdmin>(entity =>
            {
                entity.HasKey(e => e.Ano)
                    .HasName("PRIMARY");

                entity.ToTable("t_admin");

                entity.Property(e => e.Ano)
                    .HasColumnName("ano")
                    .HasComment("内测码");
            });

            modelBuilder.Entity<TBorrow>(entity =>
            {
                entity.HasKey(e => e.Bid)
                    .HasName("PRIMARY");

                entity.ToTable("t_borrow");

                entity.HasIndex(e => e.Oid, "b_o");

                entity.HasIndex(e => e.Uid, "b_u");

                entity.Property(e => e.Bid).HasColumnName("bid");

                entity.Property(e => e.Oid)
                    .HasColumnName("oid")
                    .HasComment("物品");

                entity.Property(e => e.Pass)
                    .HasColumnName("pass")
                    .HasComment("0正在审核，1已通过，2未通过");

                entity.Property(e => e.Retime)
                    .HasColumnType("datetime")
                    .HasColumnName("retime")
                    .HasComment("归还日期");

                entity.Property(e => e.Uid)
                    .HasColumnName("uid")
                    .HasComment("借用人");

                entity.HasOne(d => d.OidNavigation)
                    .WithMany(p => p.TBorrow)
                    .HasForeignKey(d => d.Oid)
                    .HasConstraintName("b_o");

                entity.HasOne(d => d.UidNavigation)
                    .WithMany(p => p.TBorrow)
                    .HasForeignKey(d => d.Uid)
                    .HasConstraintName("b_u");
            });

            modelBuilder.Entity<TObj>(entity =>
            {
                entity.HasKey(e => e.Oid)
                    .HasName("PRIMARY");

                entity.ToTable("t_obj");

                entity.HasIndex(e => e.Uid, "o_u");

                entity.Property(e => e.Oid).HasColumnName("oid");

                entity.Property(e => e.Ocate)
                    .HasColumnName("ocate")
                    .HasComment("物品种类(1书，2体育用品，3工具，4电子产品，5乐器，6小玩意，7其他)");

                entity.Property(e => e.Oimg)
                    .HasColumnType("mediumblob")
                    .HasColumnName("oimg")
                    .HasComment("物品图片");

                entity.Property(e => e.Oname)
                    .HasMaxLength(255)
                    .HasColumnName("oname")
                    .HasComment("物品名");

                entity.Property(e => e.Oretime)
                    .HasColumnName("oretime")
                    .HasComment("最长借用时间(天数)");

                entity.Property(e => e.Ostatus)
                    .HasColumnName("ostatus")
                    .HasComment("物品状态(0待审核，1可借用，2已被借用，3超出归还日期)");

                entity.Property(e => e.Uid)
                    .HasColumnName("uid")
                    .HasComment("物品所属人");

                entity.HasOne(d => d.UidNavigation)
                    .WithMany(p => p.TObj)
                    .HasForeignKey(d => d.Uid)
                    .HasConstraintName("o_u");
            });

            modelBuilder.Entity<TUser>(entity =>
            {
                entity.HasKey(e => e.Uid)
                    .HasName("PRIMARY");

                entity.ToTable("t_user");

                entity.Property(e => e.Uid).HasColumnName("uid");

                entity.Property(e => e.Good)
                    .HasColumnName("good")
                    .HasComment("0信用差，1已被警告，2信用好");

                entity.Property(e => e.Isadmin)
                    .HasColumnName("isadmin")
                    .HasComment("0用户，1管理员");

                entity.Property(e => e.Ubdate)
                    .HasColumnType("datetime")
                    .HasColumnName("ubdate")
                    .HasComment("生日");

                entity.Property(e => e.Uimg)
                    .HasColumnType("mediumblob")
                    .HasColumnName("uimg")
                    .HasComment("头像");

                entity.Property(e => e.Uname)
                    .HasMaxLength(255)
                    .HasColumnName("uname")
                    .HasComment("用户名");

                entity.Property(e => e.Uno)
                    .HasMaxLength(255)
                    .HasColumnName("uno")
                    .HasComment("账号");

                entity.Property(e => e.Upwd)
                    .HasMaxLength(255)
                    .HasColumnName("upwd")
                    .HasComment("密码");

                entity.Property(e => e.Usxey)
                    .HasColumnName("usxey")
                    .HasComment("性别(0女，1男)");

                entity.Property(e => e.Utele)
                    .HasMaxLength(255)
                    .HasColumnName("utele")
                    .HasComment("电话");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}